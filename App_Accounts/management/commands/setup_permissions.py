from django.core.management.base import BaseCommand
from django.contrib.auth.models import Group, Permission
from django.contrib.contenttypes.models import ContentType
from django.apps import apps

class Command(BaseCommand):
    help = '‡∏™‡∏£‡πâ‡∏≤‡∏á Groups ‡πÅ‡∏•‡∏∞ Permissions ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏£‡∏∞‡∏ö‡∏ö Storems'

    def handle(self, *args, **options):
        self.stdout.write('üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏™‡∏£‡πâ‡∏≤‡∏á Groups ‡πÅ‡∏•‡∏∞ Permissions...')
        
        # ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• Groups ‡πÅ‡∏•‡∏∞‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå
        groups_data = {
            '‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö (Admin)': {
                'description': '‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏£‡∏∞‡∏ö‡∏ö‡∏°‡∏µ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î',
                'permissions': ['*']  # ‡∏ó‡∏∏‡∏Å‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå
            },
            '‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£ (Manager)': {
                'description': '‡∏ú‡∏π‡πâ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏π ‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç ‡πÅ‡∏•‡∏∞‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡πÑ‡∏î‡πâ',
                'permissions': [
                    # Dashboard
                    'view_dashboard',
                    # Products
                    'App_Products.view_product',
                    'App_Products.add_product', 
                    'App_Products.change_product',
                    'App_Products.delete_product',
                    # Inventory
                    'App_Inventory.view_inventoryitem',
                    'App_Inventory.add_inventoryitem',
                    'App_Inventory.change_inventoryitem',
                    'App_Inventory.delete_inventoryitem',
                    # Purchase
                    'App_Purchase.view_purchaserequisition',
                    'App_Purchase.add_purchaserequisition',
                    'App_Purchase.change_purchaserequisition',
                    'App_Purchase.view_purchaseorder',
                    'App_Purchase.add_purchaseorder',
                    'App_Purchase.change_purchaseorder',
                    # Suppliers
                    'App_Supplier.view_supplier',
                    'App_Supplier.add_supplier',
                    'App_Supplier.change_supplier',
                    'App_Supplier.delete_supplier',
                    # Customers
                    'App_Customer.view_customer',
                    'App_Customer.add_customer',
                    'App_Customer.change_customer',
                    'App_Customer.delete_customer',
                    # Orders
                    'App_OrderingProductForSale.view_orderrequest',
                    'App_OrderingProductForSale.add_orderrequest',
                    'App_OrderingProductForSale.change_orderrequest',
                    'App_OrderingProductForSale.delete_orderrequest',
                ]
            },
            '‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏Ñ‡∏•‡∏±‡∏á (Warehouse Staff)': {
                'description': '‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏Ñ‡∏•‡∏±‡∏á‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏™‡∏¥‡∏ô‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏™‡∏ï‡πá‡∏≠‡∏Å‡πÑ‡∏î‡πâ',
                'permissions': [
                    'view_dashboard',
                    # Products - ‡∏î‡∏π‡πÅ‡∏•‡∏∞‡πÅ‡∏Å‡πâ‡πÑ‡∏Ç
                    'App_Products.view_product',
                    'App_Products.change_product',
                    # Inventory - ‡∏ó‡∏∏‡∏Å‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå
                    'App_Inventory.view_inventoryitem',
                    'App_Inventory.add_inventoryitem',
                    'App_Inventory.change_inventoryitem',
                    # Purchase - ‡∏î‡∏π‡πÅ‡∏•‡∏∞‡∏™‡∏£‡πâ‡∏≤‡∏á PR
                    'App_Purchase.view_purchaserequisition',
                    'App_Purchase.add_purchaserequisition',
                    'App_Purchase.view_purchaseorder',
                    # Orders - ‡∏î‡∏π‡πÅ‡∏•‡∏∞‡∏õ‡∏£‡∏±‡∏ö‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
                    'App_OrderingProductForSale.view_orderrequest',
                    'App_OrderingProductForSale.change_orderrequest',
                ]
            },
            '‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏Ç‡∏≤‡∏¢ (Sales Staff)': {
                'description': '‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏Ç‡∏≤‡∏¢‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏•‡∏π‡∏Å‡∏Ñ‡πâ‡∏≤‡πÅ‡∏•‡∏∞‡∏≠‡∏≠‡πÄ‡∏î‡∏≠‡∏£‡πå‡πÑ‡∏î‡πâ',
                'permissions': [
                    'view_dashboard',
                    # Products - ‡∏î‡∏π‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
                    'App_Products.view_product',
                    # Customers - ‡∏ó‡∏∏‡∏Å‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå
                    'App_Customer.view_customer',
                    'App_Customer.add_customer',
                    'App_Customer.change_customer',
                    # Orders - ‡∏ó‡∏∏‡∏Å‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå
                    'App_OrderingProductForSale.view_orderrequest',
                    'App_OrderingProductForSale.add_orderrequest',
                    'App_OrderingProductForSale.change_orderrequest',
                    # Inventory - ‡∏î‡∏π‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
                    'App_Inventory.view_inventoryitem',
                ]
            },
            '‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏à‡∏±‡∏î‡∏ã‡∏∑‡πâ‡∏≠ (Purchasing Staff)': {
                'description': '‡∏û‡∏ô‡∏±‡∏Å‡∏á‡∏≤‡∏ô‡∏à‡∏±‡∏î‡∏ã‡∏∑‡πâ‡∏≠‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠‡πÑ‡∏î‡πâ',
                'permissions': [
                    'view_dashboard',
                    # Products - ‡∏î‡∏π‡πÅ‡∏•‡∏∞‡πÄ‡∏û‡∏¥‡πà‡∏°
                    'App_Products.view_product',
                    'App_Products.add_product',
                    # Suppliers - ‡∏ó‡∏∏‡∏Å‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå
                    'App_Supplier.view_supplier',
                    'App_Supplier.add_supplier',
                    'App_Supplier.change_supplier',
                    # Purchase - ‡∏ó‡∏∏‡∏Å‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå
                    'App_Purchase.view_purchaserequisition',
                    'App_Purchase.add_purchaserequisition',
                    'App_Purchase.change_purchaserequisition',
                    'App_Purchase.view_purchaseorder',
                    'App_Purchase.add_purchaseorder',
                    'App_Purchase.change_purchaseorder',
                    # Inventory - ‡∏î‡∏π‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
                    'App_Inventory.view_inventoryitem',
                ]
            },
            '‡∏ô‡∏±‡∏Å‡∏ö‡∏±‡∏ç‡∏ä‡∏µ (Accountant)': {
                'description': '‡∏ô‡∏±‡∏Å‡∏ö‡∏±‡∏ç‡∏ä‡∏µ‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡πÅ‡∏•‡∏∞‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏î‡πâ',
                'permissions': [
                    'view_dashboard',
                    # ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
                    'App_Products.view_product',
                    'App_Inventory.view_inventoryitem',
                    'App_Purchase.view_purchaserequisition',
                    'App_Purchase.view_purchaseorder',
                    'App_Supplier.view_supplier',
                    'App_Customer.view_customer',
                    'App_OrderingProductForSale.view_orderrequest',
                    # ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠
                    'purchase.change_purchaseorder',
                ]
            },
            '‡∏ú‡∏π‡πâ‡∏î‡∏π (Viewer)': {
                'description': '‡∏ú‡∏π‡πâ‡∏î‡∏π‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏π‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏¢‡πà‡∏≤‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß',
                'permissions': [
                    'view_dashboard',
                    'App_Products.view_product',
                    'App_Inventory.view_inventoryitem',
                    'App_Purchase.view_purchaserequisition',
                    'App_Purchase.view_purchaseorder',
                    'App_Supplier.view_supplier',
                    'App_Customer.view_customer',
                    'App_OrderingProductForSale.view_orderrequest',
                ]
            }
        }
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á Groups
        for group_name, data in groups_data.items():
            group, created = Group.objects.get_or_create(name=group_name)
            
            if created:
                self.stdout.write(f'‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á Group: {group_name}')
            else:
                self.stdout.write(f'üìù ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï Group: {group_name}')
            
            # ‡∏•‡πâ‡∏≤‡∏á‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡πÄ‡∏î‡∏¥‡∏°
            group.permissions.clear()
            
            # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå
            if data['permissions'] == ['*']:
                # ‡πÉ‡∏´‡πâ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î (‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö Admin)
                all_permissions = Permission.objects.all()
                group.permissions.set(all_permissions)
                self.stdout.write(f'   ‚û°Ô∏è  ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î ({all_permissions.count()} ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå)')
            else:
                # ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏ï‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏Å‡∏≥‡∏´‡∏ô‡∏î
                added_count = 0
                for perm_code in data['permissions']:
                    if perm_code == 'view_dashboard':
                        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏û‡∏¥‡πÄ‡∏®‡∏©‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö dashboard
                        continue
                    
                    try:
                        if '.' in perm_code:
                            app_label, codename = perm_code.split('.')
                            permission = Permission.objects.get(
                                content_type__app_label=app_label,
                                codename=codename
                            )
                        else:
                            permission = Permission.objects.get(codename=perm_code)
                        
                        group.permissions.add(permission)
                        added_count += 1
                    except Permission.DoesNotExist:
                        self.stdout.write(f'   ‚ö†Ô∏è  ‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå: {perm_code}')
                
                self.stdout.write(f'   ‚û°Ô∏è  ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå: {added_count} ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå')
        
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏û‡∏¥‡πÄ‡∏®‡∏© (‡∏ñ‡πâ‡∏≤‡∏ï‡πâ‡∏≠‡∏á‡∏Å‡∏≤‡∏£)
        self.create_custom_permissions()
        
        self.stdout.write('üéâ ‡∏™‡∏£‡πâ‡∏≤‡∏á Groups ‡πÅ‡∏•‡∏∞ Permissions ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô!')
        self.stdout.write('')
        self.stdout.write('üìã Groups ‡∏ó‡∏µ‡πà‡∏™‡∏£‡πâ‡∏≤‡∏á:')
        for group in Group.objects.all():
            self.stdout.write(f'   ‚Ä¢ {group.name} ({group.permissions.count()} ‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå)')
        
        self.stdout.write('')
        self.stdout.write('üîß ‡∏ß‡∏¥‡∏ò‡∏µ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô:')
        self.stdout.write('   1. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà Django Admin ‚Üí Groups')
        self.stdout.write('   2. ‡πÑ‡∏õ‡∏ó‡∏µ‡πà Django Admin ‚Üí Users')
        self.stdout.write('   3. ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏Ç‡πâ‡∏≤ Groups ‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏°‡∏≤‡∏∞‡∏™‡∏°')

    def create_custom_permissions(self):
        """‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏û‡∏¥‡πÄ‡∏®‡∏©"""
        # ‡∏™‡∏£‡πâ‡∏≤‡∏á ContentType ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏û‡∏¥‡πÄ‡∏®‡∏©
        try:
            from django.contrib.auth.models import User
            content_type = ContentType.objects.get_for_model(User)
            
            custom_permissions = [
                ('view_dashboard', '‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÄ‡∏Ç‡πâ‡∏≤‡∏ñ‡∏∂‡∏á‡∏´‡∏ô‡πâ‡∏≤ Dashboard'),
                ('approve_purchase', '‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏≠‡∏ô‡∏∏‡∏°‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏™‡∏±‡πà‡∏á‡∏ã‡∏∑‡πâ‡∏≠'),
                ('export_data', '‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ Export ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•'),
                ('view_reports', '‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏π‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô'),
            ]
            
            for codename, name in custom_permissions:
                permission, created = Permission.objects.get_or_create(
                    codename=codename,
                    name=name,
                    content_type=content_type,
                )
                if created:
                    self.stdout.write(f'   ‚úÖ ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏û‡∏¥‡πÄ‡∏®‡∏©: {name}')
        except Exception as e:
            self.stdout.write(f'   ‚ö†Ô∏è  ‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏û‡∏¥‡πÄ‡∏®‡∏©‡πÑ‡∏î‡πâ: {e}')
